package io.jpress.jp.model;


import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.DecimalFormat;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;

import io.jpress.jp.model.base.BasePaymentRecords;
import io.jpress.model.core.Table;
import io.jpress.utils.StringUtils;

/**
 * Generated by JPress.
 */
@Table(tableName="payment_records",primaryKey="id")
public class PaymentRecords extends BasePaymentRecords<PaymentRecords> {
	private static final long serialVersionUID = 1L;
	
	public static final String STATUS_SUCCESS = "success";
	public static final String STATUS_PREPAY = "prepay"; //生成充值单，但是未开始充值
	public static final String STATUS_FAILURE = "failure";
	
	public static final PaymentRecords DAO = new PaymentRecords();
	
	public PaymentRecords findPaymentRecordsByOrdersEnterpriseId(BigInteger ordersEnterpriseId){
		String sql = "select * from `payment_records` where orders_enterprise_id = ?";
		return findFirst(sql,ordersEnterpriseId);
	}
	
	public Page<PaymentRecords> paginate(int pageNumber, int pageSize,String company){
		String sql=" select pr.userId payment_records_userId,pr.amount payment_records_amount,pr.created payment_records_created,so.orderType so_orderType,u.username user_username,u.company user_company ";
		StringBuilder fromBuilder=new StringBuilder(" from `payment_records` pr ");
		fromBuilder.append(" left join user u on pr.userId = u.id ");
		fromBuilder.append(" left join set_orders so on pr.set_orders_id = so.id ");
		fromBuilder.append(" where orders_enterprise_id  IS NULL ");
		if(StringUtils.isNotBlank(company)){
			fromBuilder.append(" and u.company like ? ORDER BY pr.created DESC");
			return DAO.paginate(pageNumber, pageSize,sql, fromBuilder.toString(),"%"+company+"%");
		}else{
			fromBuilder.append(" ORDER BY pr.created DESC");
			return DAO.paginate(pageNumber, pageSize,sql, fromBuilder.toString());
		}
	}
	
	public BigDecimal findCountAmount(BigInteger userId){
		String sql = "select SUM(amount) from `payment_records` where userId = ? ";
		return Db.queryBigDecimal(sql,userId);
	}
	public Page<PaymentRecords> findByPayRecordUserId(int pageNumber, int pageSize, BigInteger userId){
		String sql  = "select *";
		StringBuilder sqlBuilder = new StringBuilder(" from `payment_records` ");
		sqlBuilder.append(" where userId = ?  ORDER BY created DESC");
		return DAO.paginate(pageNumber, pageSize, sql, sqlBuilder.toString(),userId);
		
	}
}
